public class CategoryRepository
{
    private readonly MyDbContext _dbContext;

    public CategoryRepository(MyDbContext dbContext)
    {
        _dbContext = dbContext;
    }

    public void Add(Category category)
    {
        _dbContext.Categories.Add(category);
        _dbContext.SaveChanges();
    }

    public void Update(Category category)
    {
        _dbContext.Entry(category).State = EntityState.Modified;
        _dbContext.SaveChanges();
    }

    public void Delete(Category category)
    {
        _dbContext.Categories.Remove(category);
        _dbContext.SaveChanges();
    }

    public Category GetById(int id)
    {
        return _dbContext.Categories.Find(id);
    }

    public IEnumerable<Category> GetAll()
    {
        return _dbContext.Categories.ToList();
    }
}

public class ProductRepository
{
    private readonly MyDbContext _dbContext;

    public ProductRepository(MyDbContext dbContext)
    {
        _dbContext = dbContext;
    }

    public void Add(Product product)
    {
        _dbContext.Products.Add(product);
        _dbContext.SaveChanges();
    }

    public void Update(Product product)
    {
        _dbContext.Entry(product).State = EntityState.Modified;
        _dbContext.SaveChanges();
    }

    public void Delete(Product product)
    {
        _dbContext.Products.Remove(product);
        _dbContext.SaveChanges();
    }

    public Product GetById(int id)
    {
        return _dbContext.Products.Find(id);
    }

    public IEnumerable<Product> GetAll()
    {
        return _dbContext.Products.Include(p => p.Category).ToList();
    }
}
